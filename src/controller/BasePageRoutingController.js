/**
 * todo: no longer necessary after refactor to PageContainerView and PageContainerViewController?
 */
Ext.define('Zan.ui.controller.BasePageRoutingController', {
    extend: 'Ext.app.Controller',

    requires: [
        'Zan.ui.RoutingHelper',
    ],

    init: function() {

    },

    /**
     * This method will be called for each route and is configured
     * by Zan.ui.RoutingHelper.toPage()
     *
     * @param params
     */
    onRouteToPendingTargetPage: function(params) {
        var mergedParams = {};

        // Query string will need to be decoded into an object
        if (!Ext.isEmpty(params.zanQueryString)) {
            // Query string will be an array with one element due to regex matching
            var queryString = params.zanQueryString[0];
            mergedParams = Ext.Object.fromQueryString(queryString);
        }

        // Add in the rest of the parameters
        Ext.Object.each(params, function(key, value) {
            // Skip zanQueryString since it's already parsed
            if ('zanQueryString' === key) return true;

            mergedParams[key] = decodeURIComponent(value);
        });

        // The pending target page is set by the 'before' handler
        // This handler is dynamically generated by Zan.ui.Routing.toPage
        var targetPage = Zan.ui.RoutingHelper.getPendingTargetPage();
        console.info("[ROUTING] to %o with %o", targetPage, mergedParams);
        Ext.getApplication()
            .getController('Zan.ui.controller.AppPageController')
            .displayPage(targetPage, mergedParams);
    },
});